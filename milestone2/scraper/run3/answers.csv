Try os.chdir,Perhaps this is what you are looking for:
I am improving my answer to add more details for saving and restoring models. ,"In (and after) TensorFlow version 0.11.0RC1, you can save and restore your model directly by calling tf.train.export_meta_graph and tf.train.import_meta_graph according to https://www.tensorflow.org/programmers_guide/meta_graph."
From PEP 8 - Style Guide for Python Code:,There is more than one way to do it.
"Iterator objects in python conform to the iterator protocol, which basically means they provide two methods: __iter__()  and  __next__().  ",There are four ways to build an iterative function:
"In python the with keyword is used when working with unmanaged resources (like file streams). It is similar to the using statement in VB.NET and C#. It allows you to ensure that a resource is ""cleaned up"" when the code that uses it finishes running, even if exceptions are thrown. It provides 'syntactic sugar' for try/finally blocks.",Explanation from the Pershing on Programming blog:
The -s switch disables per-test capturing (only if a test fails).,"pytest captures the stdout from individual tests and displays them only on certain conditions, along with the summary of the tests it prints by default."
A common construct is to run a loop until something is found and then to break out of the loop. The problem is that if I break out of the loop or the loop ends I need to determine which case happened. One method is to create a flag or store variable that will let me do a second test to see how the loop was exited.,"It's a strange construct even to seasoned Python coders. When used in conjunction with for-loops it basically means ""find some item in the iterable, else if none was found do ..."". As in:"
Note: Egg packaging has been superseded by Wheel packaging.,"The .egg file is a distribution format for Python packages. It’s just an alternative to a source code distribution or Windows exe. But note that for pure Python, the .egg file is completely cross-platform."
"is will return True if two variables point to the same object (in memory), == if the objects referred to by the variables are equal.",There is a simple rule of thumb to tell you when to use == or is.
It's time to deprecate your usage of values and as_matrix().,"To convert a pandas dataframe (df) to a numpy ndarray, use this code:"
"Starting with Python 3, raw_input() was renamed to input().",This works in Python 3.x and 2.x:
"Note: Since a while back, there are binary wheels for Windows in PyPI, so this should no longer be an issue for Windows users. Below are solutions for Linux, Mac users, since lots of them find this post through web searches.","On CentOS, you need the postgres dev packages:"
Register your handler with signal.signal like this:,"You can treat it like an exception (KeyboardInterrupt), like any other. Make a new file and run it from your shell with the following contents to see what I mean:"
Use index=False.,There are two ways to handle the situation where we do not want the index to be stored in csv file.
edit: Manual installation and use of setuptools is not the standard process anymore.,I was able to install pip for python 3 on Ubuntu just by running sudo apt-get install python3-pip. 
"There are a bunch of ways to do it, but the most straightforward is to simply 
use the Python debugger. Just add following line in to a Django view function:","I really like Werkzeug's interactive debugger. It's similar to Django's debug page, except that you get an interactive shell on every level of the traceback. If you use the django-extensions, you get a runserver_plus managment command which starts the development server and gives you Werkzeug's debugger on exceptions."
Use os.path.getsize(path) which will,"Return the size, in bytes, of path. Raise os.error if the file does not exist or is inaccessible."
"re.match is anchored at the beginning of the string. That has nothing to do with newlines, so it is not the same as using ^ in the pattern.",search ⇒ find something anywhere in the string and return a match object.
Here's the way I do it with argparse (with multiple args):,"My understanding of the original question is two-fold. First, in terms of the simplest possible argparse example, I'm surprised that I haven't seen it here. Of course, to be dead-simple, it's also all overhead with little power, but it might get you started."
"As of March 2020, most of the other answers to this question are several years out-of-date. When you come across advice on Python packaging issues, remember to look at the date of publication, and don't trust out-of-date information.","I’m a distutils maintainer and distutils2/packaging contributor.  I did a talk about Python packaging at ConFoo 2011 and these days I’m writing an extended version of it.  It’s not published yet, so here are excerpts that should help define things."
"With Python older than 2.7/3.1, that's pretty much how you do it.",The recommended way for Python 2.7 and 3.1 and later is to use importlib module:
Normally your requirements.txt file would look something like this:,"“Editable” packages syntax can be used in requirements.txt to import packages from a variety of VCS (git, hg, bzr, svn):"
As of Flask 1.1.0 a view can directly return a Python dict and Flask will call jsonify automatically.,"jsonify serializes the data you pass it to JSON. If you want to serialize the data yourself, do what jsonify does by building a response with status=200 and mimetype='application/json'."
IMPORTANT NOTE: You have to sort your data first.,itertools.groupby is a tool for grouping items.
logger.exception will output a stack trace alongside the error message.,"Using exc_info options may be better, to allow you to choose the error level (if you use exception, it will always be at the error level): "
"This should be enough to store each word in a list.  words is already a list of the words from the sentence, so there is no need for the loop.",Splits the string in text on any consecutive runs of whitespace.
"There is an ordered set (possible new link) recipe for this which is referred to from the Python 2 Documentation. This runs on Py2.6 or later and 3.0 or later without any modifications. The interface is almost exactly the same as a normal set, except that initialisation should be done with a list.","The answer is no, but you can use collections.OrderedDict from the Python standard library with just keys (and values as None) for the same purpose."
"In Python 3.10, they introduced the pattern matching.",The direct replacement is if/elif/else. 
From Magnus Lycka answer on a mailing list:,"I would rather put my answer in How to flush output of print function? or in Python's print function that flushes the buffer when it's called?, but since they were marked as duplicates of this one (what I do not agree), I'll answer it here."
"jwilner's response is spot on. I was exploring to see if there's a faster option, since in my experience, summing flat arrays is (strangely) faster than counting. This code seems faster:",You have a couple of options. 
Do this:,New and neat in Python 3.5:
A key can be a function that returns a tuple:,"I'm not sure if this is the most pythonic method ...
I had a list of tuples that needed sorting 1st by descending integer values and 2nd alphabetically. This required reversing the integer sort but not the alphabetical sort. Here was my solution: (on the fly in an exam btw, I was not even aware you could 'nest' sorted functions)"
"Straight from Wes McKinney's Python for Data Analysis book, pg. 132 (I highly recommended this book):",First major difference: DEFINITION
This is the behaviour to adopt when the referenced object is deleted. It is not specific to Django; this is an SQL standard. Although Django has its own implementation on top of SQL. (1),The on_delete method is used to tell Django what to do with model instances that depend on the model instance you delete. (e.g. a ForeignKey relationship). The on_delete=models.CASCADE tells Django to cascade the deleting effect i.e. continue deleting the dependent models as well. 
Let me give some information on them:,"The functions* quit(), exit(), and sys.exit() function in the same way: they raise the SystemExit exception.  So there is no real difference, except that sys.exit() is always available but exit() and quit() are only available if the site module is imported."
What you'll see sometimes is the following:,"An interface, for an object, is a set of methods and attributes on that object."
"Without the main sentinel, the code would be executed even if the script were imported as a module.","Everyone else has already answered it, but I think I still have something else to add."
"While this is possible, you should not use the Flask dev server in production. The Flask dev server is not designed to be particularly secure, stable, or efficient. See the docs on deploying for correct solutions.","If you use the flask executable to start your server, use flask run --host=0.0.0.0 to change the default from 127.0.0.1 and open it up to non-local connections."
You can read the innerHTML attribute to get the source of the content of the element or outerHTML for the source with the current element.,"There is not really a straightforward way of getting the HTML source code of a webelement. You will have to use JavaScript. I am not too sure about python bindings, but you can easily do like this in Java. I am sure there must be something similar to JavascriptExecutor class in Python."
"In Python 2, open outfile with mode 'wb' instead of 'w'.  The csv.writer writes \r\n into the file directly.  If you don't open the file in binary mode, it will write \r\r\n because on Windows text mode will translate each \n into \r\n.","Opening the file in binary mode ""wb"" will not work in Python 3+.  Or rather, you'd have to convert your data to binary before writing it.  That's just a hassle."
Take a look at this:,In summary - let me emphasize: Do not use is to compare integers.
Python 2.4 and Earlier,"This generator yields bytes from a file, reading the file in chunks:"
"You could try the search feature in pip, ",pip install pyyaml
"df.iloc[i] returns the ith row of df. i does not refer to the index label, i is a 0-based index.",Can be done using numpy where() function:
"Basically, Python lists are very flexible and can hold completely heterogeneous, arbitrary data, and they can be appended to very efficiently, in amortized constant time.  If you need to shrink and grow your list time-efficiently and without hassle, they are the way to go.  But they use a lot more space than C arrays, in part because each item in the list requires the construction of an individual Python object, even for data that could be represented with simple C types (e.g. float or uint64_t).","For almost all cases the normal list is the right choice. The arrays module is more like a thin wrapper over C arrays, which give you kind of strongly typed containers (see docs), with access to more C-like types such as signed/unsigned short or double, which are not part of the built-in types. I'd say use the arrays module only if you really need it, in all other cases stick with lists."
A simple possibility (if you'd rather avoid REs) is,A regular expression can be used to offer more control over the whitespace characters that are combined.
"You can have a regular Python module, say config.py, like this:","The sample config you provided is actually valid YAML.  In fact, YAML meets all of your demands, is implemented in a large number of languages, and is extremely human friendly.  I would highly recommend you use it.  The PyYAML project provides a nice python module, that implements YAML.  "
"Well, I decided to workout myself on my question to solve above problem. What I wanted is to implement a simpl OCR using KNearest or SVM features in OpenCV. And below is what I did and how. ( it is just for learning how to use KNearest for simple OCR purposes).","For those who interested in C++ code can refer below code. 
Thanks Abid Rahman for the nice explanation."
"The officially recommended way to install packages from a script is by calling pip's command-line interface via a subprocess. Most other answers presented here are not supported by pip. Furthermore since pip v10, all code has been moved to pip._internal precisely in order to make it clear to users that programmatic use of pip is not allowed.",You can also use something like:
"If you're just looking to iterate over a flattened version of the data structure and don't need an indexable sequence, consider itertools.chain and company.",You almost have it! The way to do nested list comprehensions is to put the for statements in the same order as they would go in regular nested for statements.
"This assumes that sorting the column names will give the order you want.  If your column names won't sort lexicographically (e.g., if you want column Q10.3 to appear after Q9.1), you'll need to sort differently, but that has nothing to do with pandas.",You can also do more succinctly:
An example (listing the methods of the optparse.OptionParser class):,"There is the dir(theobject) method to list all the fields and methods of your object (as a tuple) and the inspect module (as codeape write) to list the fields and methods with their doc (in """""")."
"Suppose you are designing a new class with some methods that you don't want to implement, yet.","Python has the syntactical requirement that code blocks (after if, except, def, class etc.) cannot be empty. Empty code blocks are however useful in a variety of different contexts, such as in examples below, which are the most frequent use cases I have seen."
You can also use this syntax in expressions like,"Alex' comment looks good but I was still confused with using range.
The following worked for me while working on a for condition using length within range."
"The best way of appending a string to a string variable is to use + or +=. This is because it's readable and fast. They are also just as fast, which one you choose is a matter of taste, the latter one is the most common. Here are timings with the timeit module:","If you are concatenating a lot of values, then neither. Appending a list is expensive. You can use StringIO for that. Especially if you are building it up over a lot of operations."
"Your understanding is mostly correct. You use select_related when the object that you're going to be selecting is a single object, so OneToOneField or a ForeignKey. You use prefetch_related when you're going to get a ""set"" of things, so ManyToManyFields as you stated or reverse ForeignKeys. Just to clarify what I mean by ""reverse ForeignKeys"" here's an example:","Both methods achieve the same purpose, to forego unnecessary db queries. But they use different approaches for efficiency."
"According to the documentation, instead of ",You are just supposed to read the file and exec the code yourself. 2to3 current replaces
"In the standard library, there is no cross-platform way to create aware timezones without creating your own timezone class. (Edit: Python 3.9 introduces zoneinfo in the standard library which does provide this functionality.)","Get the current time, in a specific timezone:"
"Yep, both and and or operators short-circuit -- see the docs.","Let's first define a useful function to determine if something is executed or not. A simple function that accepts an argument, prints a message and returns the input, unchanged."
"I think that the command axis('off') takes care of one of the problems more succinctly than changing each axis and the border separately. It still leaves the white space around the border however. Adding bbox_inches='tight' to the savefig command almost gets you there, you can see in the example below that the white space left is much smaller, but still present.","I learned this trick from matehat, here:"
The usual way to do this is something like the following.,This is possible in Python 2 using
Use the double-star (aka double-splat?) operator:,** operator would be helpful here. 
With Python 2.7 and higher you don't have to write new code or use third-party tools to do this; recursive test execution via the command line is built-in.  Put an __init__.py in your test directory and:,"In python 3, if you're using unittest.TestCase:"
Use re.findall or re.finditer instead.
"Numpy matrices are strictly 2-dimensional, while numpy arrays (ndarrays) are
N-dimensional.  Matrix objects are a subclass of ndarray, so they inherit all
the attributes and methods of ndarrays.",Scipy.org recommends that you use arrays:
A module is a file containing Python definitions and statements. The file name is the module name with the suffix .py,Python 3 - UPDATED 18th November 2015
"Sure, take a look at sys.version and sys.version_info.","Try this code, this should work:"
"If I understand correctly, assignment should fill:","To add to DSM's answer and building on this associated question, I'd split the approach into two cases:"
"Try PDFMiner. It can extract text from PDF files as HTML, SGML or ""Tagged PDF"" format.",The PDFMiner package has changed since codeape posted.  
The easiest way is to use to_datetime:,"If your date column is a string of the format '2017-01-01'
you can use pandas astype to convert it to datetime."
"Don't use os.system. It has been deprecated in favor of subprocess. From the docs: ""This module intends to replace several older modules and functions: os.system, os.spawn"".","To somewhat expand on the earlier answers here, there are a number of details which are commonly overlooked."
The easiest way is to pickle it using to_pickle:,Although there are already some answers I found a nice comparison in which they tried several ways to serialize Pandas DataFrames: Efficiently Store Pandas DataFrames. 
Yes like this:,The parameter to the defaultdict constructor is the function which will be called for building new elements. So let's use a lambda !
You can use set_printoptions to set the precision of the output:,"You can get a subset of the np.set_printoptions functionality from the np.array_str command, which applies only to a single print statement."
"This error usually rises when you join / assign to a column when the index has duplicate values. Since you are assigning to a row, I suspect that there is a duplicate value in affinity_matrix.columns, perhaps not shown in your question.","As others have said, you've probably got duplicate values in your original index. To find them do this:"
"Ok, it must be clarified how the or operator works. It is a boolean operator, so it works in a boolean context. If the values are not boolean, they are converted to boolean for the purposes of the operator.","Strictly,"
"The bug is probably somewhere else in your code, because it should work fine:","The cheapest and most readable solution is using the in operator (or in your specific case, not in). As mentioned in the documentation,"
"It depends on how correct you want to be. \n will usually do the job. If you really want to get it right, you look up the newline character in the os package. (It's actually called linesep.)",The new line character is \n. It is used inside a string.
You can add the 'default' parameter to json.dumps to handle this:,"For cross-language projects, I found out that strings containing RfC 3339 dates are the best way to go. An RfC 3339 date looks like this:"
"Well, I am a bit curious, so I just tested the three myself right after asking the question ;-)",pep8 was recently added to PyPi.
Notice the - before check_in.,"A hyphen ""-"" in front of ""check_in"" indicates descending order. Ascending order is implied."
There are a couple of ways:,this will raise exception if the object with specified primary key doesn't exist because at first it tries to retrieve the specified object.
A simple way to do this is to use StringIO.StringIO (python2) or io.StringIO (python3) and pass that to the pandas.read_csv function. E.g:,Split Method
"Python evaluates expressions from left to right. Notice that while
evaluating an assignment, the right-hand side is evaluated before the
left-hand side.","That is the standard way to swap two variables, yes."
"json is simplejson, added to the stdlib. But since json was added in 2.6, simplejson has the advantage of working on more Python versions (2.4+). ",I have to disagree with the other answers: the built in json library (in Python 2.7) is not necessarily slower than simplejson. It also doesn't have this annoying unicode bug.
"I'm not entirely sure what you want, and your last line of code does not help either, but anyway:",Filters can be chained using a Pandas query:
"It blocks the thread.  If you look in Modules/timemodule.c in the Python source, you'll see that in the call to floatsleep(), the substantive part of the sleep operation is wrapped in a Py_BEGIN_ALLOW_THREADS and Py_END_ALLOW_THREADS block, allowing other threads to continue to execute while the current one sleeps.  You can also test this with a simple python program:","It will just sleep the thread except in the case where your application has only a single thread, in which case it will sleep the thread and effectively the process as well."
If you like ascii art:,"When stride is 1 (more typical with convolution than pooling), we can think of the following distinction:"
"I just found out that there actually  is a thread-based Pool interface in the multiprocessing module, however it is hidden somewhat and not properly documented.","In Python 3 you can use concurrent.futures.ThreadPoolExecutor, i.e.:"
have you tried to remove the timezone awareness?,"The correct solution is to add the timezone info e.g., to get the current time as an aware datetime object in Python 3:"
"You have the wrong mental model for using NumPy efficiently. NumPy arrays are stored in contiguous blocks of memory. If you want to add rows or columns to an existing array, the entire array needs to be copied to a new block of memory, creating gaps for the new elements to be stored. This is very inefficient if done repeatedly to build an array.","A NumPy array is a very different data structure from a list and is designed to be used in different ways.  Your use of hstack is potentially very inefficient... every time you call it, all the data in the existing array is copied into a new one. (The append function will have the same issue.)  If you want to build up your matrix one column at a time, you might be best off to keep it in a list until it is finished, and only then convert it into an array."
The other answers have done a good job at explaining duck typing and the simple answer by tzot:,"Python is strongly typed because every object has a type, every object knows its type, it's impossible to accidentally or deliberately use an object of a type ""as if"" it was an object of a different type, and all elementary operations on the object are delegated to its type."
This will give you a sorted version of the array.,"In one line, using a lambda:"
python setup.py install is used to install (typically third party) packages that you're not going to develop/modify/debug yourself.,From the documentation. The develop will not install the package but it will create a .egg-link in the deployment directory back to the project source code directory.
Using multiple threads on CPython won't give you better performance for pure-Python code due to the global interpreter lock (GIL).  I suggest using the multiprocessing module instead:,"The above works beautifully on my machine (Ubuntu, package joblib was pre-installed, but can be installed via pip install joblib)."
Is this the correct use of conftest.py?,In a wide meaning conftest.py is a local per-directory plugin. Here you define directory-specific hooks and fixtures. In my case a have a root directory containing project specific tests directories. Some common magic is stationed in 'root' conftest.py. Project specific - in their own ones. Can't see anything bad in storing fixtures in conftest.py unless they are not used widely (In that case I prefer to define them in test files directly)
From the Django documentation:,When you have list of items and you want to check the possible values from the list then you can't use =.
cp33 means CPython 3.3.,This can also be caused by using an out-of-date pip with a recent wheel file.
The answer to that question depends somewhat on the particular Python implementation.  ,You can use pathlib.
"You write, ""I know literally it's list of numbers and list of lists where all list contains only a number"" but that's a bit of an unhelpful way to think about it.","The difference between (R,) and (1,R) is literally the number of indices that you need to use.  ones((1,R)) is a 2-D array that happens to have only one row.  ones(R) is a vector.  Generally if it doesn't make sense for the variable to have more than one row/column, you should be using a vector, not a matrix with a singleton dimension."
The current API is that:,As explained here a key difference is that:
https://pypi.org/project/Pillow/,This works for me:
You can just use the pd.Timestamp constructor. The following diagram may be useful for this and related questions. ,Welcome to hell.
"As of the 0.17.0 release, the sort method was deprecated in favor of sort_values.  sort was completely removed in the 0.20.0 release. The arguments (and results) remain the same:","As of pandas 0.17.0, DataFrame.sort() is deprecated, and set to be removed in a future version of pandas. The way to sort a dataframe by its values is now is DataFrame.sort_values"
"I have an approach which I think is interesting and a bit different from the rest.  The main difference in my approach, compared to some of the others, is in how the image segmentation step is performed--I used the DBSCAN clustering algorithm from Python's scikit-learn; it's optimized for finding somewhat amorphous shapes that may not necessarily have a single clear centroid.","EDIT NOTE: I edited this post to (i) process each tree image individually, as requested in the requirements, (ii) to consider both object brightness and shape in order to improve the quality of the result. "
The definition of asarray is:,"Since other questions are being redirected to this one which ask about asanyarray or other array creation routines, it's probably worth having a brief summary of what each of them does."
You can also set figure size by passing dictionary to rc parameter with key 'figure.figsize' in seaborn set method:,"You need to create the matplotlib Figure and Axes objects ahead of time, specifying how big the figure is:"
"np.r_[ ... ] and np.c_[ ... ]
are useful alternatives to vstack and hstack,
with square brackets [] instead of round ().
A couple of examples:",I think a more straightforward solution and faster to boot is to do the following:
Use the argparse.ArgumentDefaultsHelpFormatter formatter:,Add '%(default)s' to the help parameter to control what is displayed.
"plt.subplots() is a function that returns a tuple containing a figure and axes object(s). Thus when using fig, ax = plt.subplots() you unpack this tuple into the variables fig and ax. Having fig is useful if you want to change figure-level attributes or save the figure as an image file later (e.g. with fig.savefig('yourfilename.png')). You certainly don't have to use the returned figure object but many people do use it later so it's common to see. Also, all axes objects (the objects that have plotting methods), have a parent figure object anyway, thus:",Just a supplement here.
There is a built in.,I think maybe you are looking for an algorithm describing the distance between strings. Here are some you may refer to:  
You can use strftime to help you format your date.,"date and datetime objects (and time as well) support a mini-language to specify output, and there are two ways to access it:"
I've always kept this around in a util file. You can use it as a mixin on your own classes too.,You can do it using this class I just made. With this class you can use the Map object like another dictionary(including json serialization) or with the dot notation. I hope to help you:
You can easily add a second legend by adding the line:,"I'm not sure if this functionality is new, but you can also use the get_legend_handles_labels() method rather than keeping track of lines and labels yourself:"
"The difference is that raw_input() does not exist in Python 3.x, while input() does.  Actually, the old raw_input() has been renamed to input(), and the old input() is gone, but can easily be simulated by using eval(input()).  (Remember that eval() is evil. Try to use safer ways of parsing your input if possible.)","In Python 2, raw_input() returns a string, and input() tries to run the input as a Python expression."
"Use the to_datetime function, specifying a format to match your data.",If you have more than one column to be converted you can do the following:
via Documentation,"Because QuerySets implement the Python __or__ operator (|), or union, it just works. As you'd expect, the | binary operator returns a QuerySet so order_by(), .distinct(), and other queryset filters can be tacked on to the end."
Yes. You can use *args as a non-keyword argument. You will then be able to pass any number of arguments.,Adding to unwinds post:
"Warning: timeit results may vary due to differences in hardware or
version of Python.  ",Faster & more memory-wise pure Python code:
"As a complement to the accepted answer, this answer shows keras behaviors and how to achieve each picture.","First of all, you choose great tutorials(1,2) to start."
"Because it's more common to call range(0, 10) which returns [0,1,2,3,4,5,6,7,8,9] which contains 10 elements which equals len(range(0, 10)). Remember that programmers prefer 0-based indexing.","Although there are some useful algorithmic explanations here, I think it may help to add some simple 'real life' reasoning as to why it works this way, which I have found useful when introducing the subject to young newcomers:"
"Use a process group so as to enable sending a signal to all the process in the groups. For that, you should attach a session id to the parent process of the spawned/child processes, which is a shell in your case. This will make it the group leader of the processes. So now, when a signal is sent to the process group leader, it's transmitted to all of the child processes of this group.",p.kill() ends up killing the shell process and cmd is still running.
Use tolist():,The numpy .tolist method produces nested lists if the numpy array shape is 2D.

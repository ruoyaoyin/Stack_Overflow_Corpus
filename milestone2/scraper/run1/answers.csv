"To understand what yield does, you must understand what generators are. And before you can understand generators, you must understand iterables.","When you see a function with yield statements, apply this easy trick to understand what will happen:"
It's boilerplate code that protects users from accidentally invoking the script when they didn't intend to. Here are some common problems when the guard is omitted from a script:,"When your script is run by passing it as a command to the Python interpreter,"
"Yes, It was added in version 2.5. The expression syntax is:",You can index into a tuple:
"Before understanding metaclasses, you need to master classes in Python. And Python has a very peculiar idea of what classes are, borrowed from the Smalltalk language.",A metaclass is the class of a class. A class defines how an instance of the class (i.e. an object) behaves while a metaclass defines how a class behaves. A class is an instance of a metaclass.
"For dictionaries x and y, z becomes a shallowly-merged dictionary with values from y replacing those from x.","In your case, what you can do is:"
Use the subprocess module in the standard library:,"Summary of ways to call external programs, including their advantages and disadvantages:"
"On Python ≥ 3.5, use pathlib.Path.mkdir:","pathlib.Path.mkdir as used above recursively creates the directory and does not raise an exception if the directory already exists. If you don't need or want the parents to be created, skip the parents argument."
"Maybe a bit of example code will help: Notice the difference in the call signatures of foo, class_foo and static_foo:","A staticmethod is a method that knows nothing about the class or instance it was called on. It just gets the arguments that were passed, no implicit first argument. It is basically useless in Python -- you can just use a module function instead of a staticmethod."
It's pretty simple really:,The Python tutorial talks about it (scroll down a bit until you get to the part about slicing).
key is just a variable name.  ,"It's not that key is a special word, but that dictionaries implement the iterator protocol.  You could do this in your class, e.g. see this question for how to build class iterators."
You can use a global variable within other functions by declaring it as global within each function that assigns a value to it:,"If I'm understanding your situation correctly, what you're seeing is the result of how Python handles local (function) and global (module) namespaces."
You can use the in operator:,"If it's just a substring search you can use string.find(""substring"")."
From Python Documentation:,Do this:
"Alex summarized well but, surprisingly, was too succinct.","My rule of thumb:  __repr__ is for developers, __str__ is for customers."
You can use the + operator to combine them:,"Python >= 3.5 alternative: [*l1, *l2]"
Using the implicit booleanness of the empty list is quite pythonic.,The pythonic way to do it is from the PEP 8 style guide.
append appends object at the end.,"append adds an element to a list, and extend concatenates the first list with another list (or another iterable, not necessarily a list.)"
"It used to be a required part of a package (old, pre-3.3 ""regular package"", not newer 3.3+ ""namespace package"").","Files named __init__.py are used to mark directories on disk as Python package directories.
If you have the files"
"Actually, this is not a design flaw, and it is not because of internals or performance.
It comes simply from the fact that functions in Python are first-class objects, and not only a piece of code.",Suppose you have the following code
Here is another example where something is run approximately once a minute:,You can use the sleep() function in the time module. It can take a float argument for sub-second resolution.
Arguments are passed by assignment. The rationale behind this is twofold:,"The problem comes from a misunderstanding of what variables are in Python. If you're used to most traditional languages, you have a mental model of what happens in the following sequence:"
"With new_list = my_list, you don't actually have two lists. The assignment just copies the reference to the list, not the actual list, so both new_list and my_list refer to the same list after the assignment.","Felix already provided an excellent answer, but I thought I'd do a speed comparison of the various methods:"
"If you are not into long explanations, see Paolo Bergantino’s answer.",Check out the documentation to see how decorators work. Here is what you asked for:
"super() lets you avoid referring to the base class explicitly, which can be nice. But the main advantage comes with multiple inheritance, where all sorts of fun stuff can happen. See the standard docs on super if you haven't already.",The reason we use super is so that child classes that may be using cooperative multiple inheritance will call the correct next parent class function in the Method Resolution Order (MRO).
The *args and **kwargs is a common idiom to allow arbitrary number of arguments to functions as described in the section more on defining functions in the Python documentation.,"It's also worth noting that you can use * and ** when calling functions as well. This is a shortcut that allows you to pass multiple arguments to a function directly using either a list/tuple or a dictionary. For example, if you have the following function:"
"To select rows whose column value equals a scalar, some_value, use ==:",There are several ways to select rows from a Pandas dataframe:
figure tells you the call signature:,"If you've already got the figure created, you can use figure.set_size_inches to adjust the figure size:"
Use the most specific Exception constructor that semantically fits your issue.,DON'T DO THIS. Raising a bare Exception is absolutely not the right thing to do; see Aaron Hall's excellent answer instead.
"This somewhat depends on what platform you are on. The most common way to do this is by printing ANSI escape sequences. For a simple example, here's some Python code from the Blender build scripts:",There is also the Python termcolor module. Usage is pretty simple:
Environment variables are accessed through os.environ,To check if the key exists (returns True or False)
"To get the full path to the directory a Python file is contained in, write this in that file:",Current working directory:  os.getcwd()
in is the intended way to test for the existence of a key in a dict.,You don't have to call keys:
"Good news! Python 3.4 (released March 2014) and Python 2.7.9 (released December 2014) ship with Pip. This is the best feature of any Python release. It makes the community's wealth of libraries accessible to everyone. Newbies are no longer excluded from using community libraries by the prohibitive difficulty of setup. In shipping with a package manager, Python joins Ruby, Node.js, Haskell, Perl, Go—almost every other contemporary language with a majority open-source community. Thank you, Python.","-- Outdated -- use distribute, not setuptools as described here. --
-- Outdated #2 -- use setuptools as distribute is deprecated."
"The Python 3 range() object doesn't produce numbers immediately; it is a smart sequence object that produces numbers on demand. All it contains is your start, stop and step values, then as you iterate over the object the next integer is calculated each iteration.","The fundamental misunderstanding here is in thinking that range is a generator. It's not. In fact, it's not any kind of iterator."
some_list[-1] is the shortest and most Pythonic.,"If your str() or list() objects might end up being empty as so: astr = '' or alist = [], then you might want to use alist[-1:] instead of alist[-1] for object ""sameness""."
"To delete a key regardless of whether it is in the dictionary, use the two-argument form of dict.pop():","Specifically to answer ""is there a one line way of doing this?"""
Use .lower() - For example:,"Is there any way to convert an entire user inputted string from uppercase, or even part uppercase to lowercase?"
"Variables declared inside the class definition, but not inside a method are class or static variables:","@Blair Conrad said static variables declared inside the class definition, but not inside a method are class or ""static"" variables:"
"In Python 3, you can use the sep= and end= parameters of the print function:","For Python 2 and earlier, it should be as simple as described in Re: How does one print without a CR? by Guido van Rossum (paraphrased):"
Assuming module foo with method bar:,or
The len() function can be used with several different types in Python - both built-in types and library types. For example:,"To find the size of a list, use the builtin function, len:"
Use random.choice():,"If you want to randomly select more than one item from a list, or select an item from a set, I'd recommend using random.sample instead."
Try hasattr():,"As Jarret Hardie answered, hasattr will do the trick.  I would like to add, though, that many in the Python community recommend a strategy of ""easier to ask for forgiveness than permission"" (EAFP) rather than ""look before you leap"" (LBYL).  See these references:"
"Usually, activating a virtualenv gives you a shell function named:",Use:
One way is to use Kivy:,"There is also the new Android Scripting Environment (ASE/SL4A) project. It looks awesome, and it has some integration with native Android components. "
You are running into the old problem with floating point numbers that not all numbers can be represented exactly. The command line is just showing you the full floating point form from memory.,"There are new format specifications, String Format Specification Mini-Language:"
"By default, cin is synchronized with stdio, which causes it to avoid any input buffering.  If you add this to the top of your main, you should see much better performance:","Just out of curiosity I've taken a look at what happens under the hood, and I've used dtruss/strace on each test."
"Note: This answer was intended for a very specific question. For most programmers coming here from a search engine, this is not the answer you are looking for. Typically you would structure your files into packages (see other answers) instead of modifying the search path.",Nothing wrong with:
You need to double the {{ and }}:,Python 3.6+ (2017)
"There are two built-in functions that help you identify the type of an object. You can use type()  if you need the exact type of an object, and isinstance() to check an object’s type against something. Usually, you want to use isinstance() most of the times since it is very robust and also supports type inheritance.",You can do that using type():
"It's because any iterable can be joined (e.g, list, tuple, dict, set), but its contents and the ""joiner"" must be strings.","This was discussed in the String methods... finally thread in the Python-Dev achive, and was accepted by Guido. This thread began in Jun 1999, and str.join was included in Python 1.6 which was released in Sep 2000 (and supported Unicode). Python 2.0 (supported str methods including join) was released in Oct 2000."
Use del and specify the index of the element you want to delete:,You probably want pop:
"Yep, using the staticmethod decorator","I think that Steven is actually right. To answer the original question, then, in order to set up a class method, simply assume that the first argument is not going to be a calling instance, and then make sure that you only call the method from the class."
"This can be achieved by setting the mode in open() to ""a"" (append) instead of ""w"" (write). See the documentation op open() for all available modes.","You need to open the file in append mode, by setting ""a"" or ""ab"" as the mode. See open()."
The best way to do this in Pandas is to use drop:,"As you've guessed, the right syntax is "
Strings:,Just use the rjust method of the string object.
"Though classmethod and staticmethod are quite similar, there's a slight difference in usage for both entities: classmethod must have a reference to a class object as the first parameter, whereas staticmethod can have no parameters at all.",Rostyslav Dzinko's answer is very appropriate. I thought I could highlight one other reason you should choose @classmethod over @staticmethod when you are creating an additional constructor.
"Have you tried the __name__ attribute of the class? ie type(x).__name__ will give you the name of the class, which I think is what you want.",Do you want the name of the class as a string?
"If you just want to measure the elapsed wall-clock time between two points, you could use  time.time():",Use timeit.default_timer instead of timeit.timeit. The former provides the best clock available on your platform and version of Python automatically:
"Are you talking about multi-line strings? Easy, use triple quotes to start and end them.","If you don't want a multiline string, but just have a long single line string, you can use parentheses. Just make sure you don't include commas between the string segments (then it will be a tuple)."
Try:,Return a random integer N such that a <= N <= b.
TL;DR:,You can even use a version range with pip install command. Something like this:
pip's documentation lists the supported mechanisms to install it: https://pip.pypa.io/en/stable/installation/#supported-methods,⚡️ TL;DR — One-line solution.
"This is my personal recommendation for beginners: start by learning virtualenv and pip, tools which work with both Python 2 and 3 and in a variety of situations, and pick up other tools once you start needing them.",I would just avoid the use of virtualenv after Python3.3+ and instead use the standard shipped library venv. To create a new virtual environment you would type:
You could use the fileinput module:,There's a few ways to do it.
"I found this to be the only one short, flexible, portable and readable:","Is my choice, just more readable and saying exactly what you intend to do and portable across versions.  "
"Names, in a class, with a leading underscore are simply to indicate to other programmers that the attribute or method is intended to be private.  However, nothing special is done with the name itself.","__foo__: this is just a convention, a way for the Python system to use names that won't conflict with user names."
"Maybe I missed the question, but why not:","With modern Python Exceptions, you don't need to abuse .message, or override .__str__() or .__repr__() or any of it. If all you want is an informative message when your exception is raised, do this:"
"To check if o is an instance of str or any subclass of str, use isinstance (this would be the ""canonical"" way):",The most Pythonic way to check the type of an object is... not to check it.
Looks like you haven't properly installed the header files and static libraries for python dev.  Use your package manager to install them system-wide.,"On Ubuntu, I was running Python 3 and I had to install "
"The json module already implements some basic pretty printing in the dump and dumps functions, with the indent parameter that specifies how many spaces to indent by:",You can do this on the command line:
"In Python 3, apart from compatibility between Python 2 and 3, no reason. In Python 2, many reasons. ",Python 3
"Python includes a profiler called cProfile. It not only gives the total running time, but also times each function separately, and tells you how many times each function was called, making it easy to determine where you should make optimizations.","A while ago I made pycallgraph which generates a visualisation from your Python code. Edit: I've updated the example to work with 3.3, the latest release as of this writing."
"For a dataframe df, one can use any of the following:",Suppose df is your dataframe then:
For Python 3.5+ use:,The advantage of adding a path to sys.path (over using imp) is that it simplifies things when importing more than one module from a single package.  For example:
The syntax is the * and **.  The names *args and **kwargs are only by convention but there's no hard requirement to use them.,One place where the use of *args and **kwargs is quite useful is for subclassing.
Use a dict comprehension (Python 2.7 and later):,"In Python 3 and Python 2.7+, dictionary comprehensions look like the below:"
"In Python 3, print can take an optional flush argument:","Running python -h, I see a command line option:"
"To summarize the contents of other (already good!) answers, isinstance caters for inheritance (an instance of a derived class is an instance of a base class, too), while checking for equality of type does not (it demands identity of types and rejects instances of subtypes, AKA subclasses).",Here's an example where isinstance achieves something that type cannot:
You need to read the Python Unicode HOWTO. This error is the very first example.,This is a classic python unicode pain point! Consider the following:
You can also write:,Be careful when the item being repeated is a list. The list will not be cloned: all the elements will refer to the same list!
You have circular dependent imports. physics.py is imported from entity before class Ent is defined and physics tries to import entity that is already initializing. Remove the dependency to physics from entity module.,"While you should definitely avoid circular dependencies, you can defer imports in python."
Constructing a new dict: ,Slightly more elegant dict comprehension:
For pip >= 21.2 use:,"(update: As of March 2020, many people have reported that yolk, installed via pip install yolk3k, only returns latest version.  Chris's answer seems to have the most upvotes and worked for me)"
Easy as py.,It can be as simple as:
Look at the Temporarily Suppressing Warnings section of the Python docs:,There's the -W option.
The ceil (ceiling) function:,"I know this answer is for a question from a while back, but if you don't want to import math and you just want to round up, this works for me."
Include the type specifier in your format expression:,"When it comes to float numbers, you can use format specifiers:"
"The current recommendation is to use python -m pip, where python is the version of Python you would like to use. This is the recommendation because it works across all versions of Python, and in all forms of virtualenv. For example:","On Windows, you can execute the pip module using a given Python version through the Python launcher, py.exe, if you chose to install it during Python 3 setup."
You could explicitly set where you want to tick marks with plt.xticks:,Another approach is to set the axis locator:
Unidecode is the correct answer for this. It transliterates any unicode string into the closest possible representation in ascii text.,How about this:
"The time.time() function returns the number of seconds since the epoch, as seconds.  Note that the ""epoch"" is defined as the start of January 1st, 1970 in UTC.  So the epoch is defined in terms of UTC and establishes a global moment in time.  No matter where you are ""seconds past epoch"" (time.time()) returns the same value at the same moment.","This is for the text form of a timestamp that can be used in your text files. (The title of the question was different in the past, so the introduction to this answer was changed to clarify how it could be interpreted as the time. [updated 2016-01-14])"
You can use dict.get(),Wonder no more. It's built into the language.
"You can do this with str.ljust(width[, fillchar]):","For a flexible method that works even when formatting complicated string, you probably should use the string-formatting mini-language,"
Are dictionaries ordered in Python 3.6+?,Below is answering the original first question:
"There are two string methods for this, find() and index().  The difference between the two is what happens when the search string isn't found.  find() returns -1  and index() raises a ValueError.","Just for a sake of completeness, if you need to find all positions of a character in a string, you can do the following:"
Use the nargs option or the 'append' setting of the action option (depending on how you want the user interface to behave).,"I prefer passing a delimited string which I parse later in the script. The reasons for this are; the list can be of any type int or str, and sometimes using nargs I run into problems if there are multiple optional arguments and positional arguments."
"Use __new__ when you need to control
the creation of a new instance.","__new__ is static class method, while __init__ is instance method. 
__new__ has to create the instance first, so __init__ can initialize it. Note that __init__ takes self as parameter. Until you create instance there is no self."
Try os.chdir,Perhaps this is what you are looking for:
I am improving my answer to add more details for saving and restoring models. ,"In (and after) TensorFlow version 0.11.0RC1, you can save and restore your model directly by calling tf.train.export_meta_graph and tf.train.import_meta_graph according to https://www.tensorflow.org/programmers_guide/meta_graph."
From PEP 8 - Style Guide for Python Code:,There is more than one way to do it.
"Iterator objects in python conform to the iterator protocol, which basically means they provide two methods: __iter__()  and  __next__().  ",There are four ways to build an iterative function:
"In python the with keyword is used when working with unmanaged resources (like file streams). It is similar to the using statement in VB.NET and C#. It allows you to ensure that a resource is ""cleaned up"" when the code that uses it finishes running, even if exceptions are thrown. It provides 'syntactic sugar' for try/finally blocks.",Explanation from the Pershing on Programming blog:
The -s switch disables per-test capturing (only if a test fails).,"pytest captures the stdout from individual tests and displays them only on certain conditions, along with the summary of the tests it prints by default."
A common construct is to run a loop until something is found and then to break out of the loop. The problem is that if I break out of the loop or the loop ends I need to determine which case happened. One method is to create a flag or store variable that will let me do a second test to see how the loop was exited.,"It's a strange construct even to seasoned Python coders. When used in conjunction with for-loops it basically means ""find some item in the iterable, else if none was found do ..."". As in:"
Note: Egg packaging has been superseded by Wheel packaging.,"The .egg file is a distribution format for Python packages. It’s just an alternative to a source code distribution or Windows exe. But note that for pure Python, the .egg file is completely cross-platform."
"is will return True if two variables point to the same object (in memory), == if the objects referred to by the variables are equal.",There is a simple rule of thumb to tell you when to use == or is.
It's time to deprecate your usage of values and as_matrix().,"To convert a pandas dataframe (df) to a numpy ndarray, use this code:"
"Starting with Python 3, raw_input() was renamed to input().",This works in Python 3.x and 2.x:
"Note: Since a while back, there are binary wheels for Windows in PyPI, so this should no longer be an issue for Windows users. Below are solutions for Linux, Mac users, since lots of them find this post through web searches.","On CentOS, you need the postgres dev packages:"
Register your handler with signal.signal like this:,"You can treat it like an exception (KeyboardInterrupt), like any other. Make a new file and run it from your shell with the following contents to see what I mean:"
Use index=False.,There are two ways to handle the situation where we do not want the index to be stored in csv file.
edit: Manual installation and use of setuptools is not the standard process anymore.,I was able to install pip for python 3 on Ubuntu just by running sudo apt-get install python3-pip. 
"There are a bunch of ways to do it, but the most straightforward is to simply 
use the Python debugger. Just add following line in to a Django view function:","I really like Werkzeug's interactive debugger. It's similar to Django's debug page, except that you get an interactive shell on every level of the traceback. If you use the django-extensions, you get a runserver_plus managment command which starts the development server and gives you Werkzeug's debugger on exceptions."
Use os.path.getsize(path) which will,"Return the size, in bytes, of path. Raise os.error if the file does not exist or is inaccessible."
"re.match is anchored at the beginning of the string. That has nothing to do with newlines, so it is not the same as using ^ in the pattern.",search ⇒ find something anywhere in the string and return a match object.
Here's the way I do it with argparse (with multiple args):,"My understanding of the original question is two-fold. First, in terms of the simplest possible argparse example, I'm surprised that I haven't seen it here. Of course, to be dead-simple, it's also all overhead with little power, but it might get you started."
"As of March 2020, most of the other answers to this question are several years out-of-date. When you come across advice on Python packaging issues, remember to look at the date of publication, and don't trust out-of-date information.","I’m a distutils maintainer and distutils2/packaging contributor.  I did a talk about Python packaging at ConFoo 2011 and these days I’m writing an extended version of it.  It’s not published yet, so here are excerpts that should help define things."
"With Python older than 2.7/3.1, that's pretty much how you do it.",The recommended way for Python 2.7 and 3.1 and later is to use importlib module:
Normally your requirements.txt file would look something like this:,"“Editable” packages syntax can be used in requirements.txt to import packages from a variety of VCS (git, hg, bzr, svn):"
As of Flask 1.1.0 a view can directly return a Python dict and Flask will call jsonify automatically.,"jsonify serializes the data you pass it to JSON. If you want to serialize the data yourself, do what jsonify does by building a response with status=200 and mimetype='application/json'."
IMPORTANT NOTE: You have to sort your data first.,itertools.groupby is a tool for grouping items.
logger.exception will output a stack trace alongside the error message.,"Using exc_info options may be better, to allow you to choose the error level (if you use exception, it will always be at the error level): "
"This should be enough to store each word in a list.  words is already a list of the words from the sentence, so there is no need for the loop.",Splits the string in text on any consecutive runs of whitespace.
"There is an ordered set (possible new link) recipe for this which is referred to from the Python 2 Documentation. This runs on Py2.6 or later and 3.0 or later without any modifications. The interface is almost exactly the same as a normal set, except that initialisation should be done with a list.","The answer is no, but you can use collections.OrderedDict from the Python standard library with just keys (and values as None) for the same purpose."
"In Python 3.10, they introduced the pattern matching.",The direct replacement is if/elif/else. 
From Magnus Lycka answer on a mailing list:,"I would rather put my answer in How to flush output of print function? or in Python's print function that flushes the buffer when it's called?, but since they were marked as duplicates of this one (what I do not agree), I'll answer it here."
"jwilner's response is spot on. I was exploring to see if there's a faster option, since in my experience, summing flat arrays is (strangely) faster than counting. This code seems faster:",You have a couple of options. 
Do this:,New and neat in Python 3.5:
A key can be a function that returns a tuple:,"I'm not sure if this is the most pythonic method ...
I had a list of tuples that needed sorting 1st by descending integer values and 2nd alphabetically. This required reversing the integer sort but not the alphabetical sort. Here was my solution: (on the fly in an exam btw, I was not even aware you could 'nest' sorted functions)"
"Straight from Wes McKinney's Python for Data Analysis book, pg. 132 (I highly recommended this book):",First major difference: DEFINITION
This is the behaviour to adopt when the referenced object is deleted. It is not specific to Django; this is an SQL standard. Although Django has its own implementation on top of SQL. (1),The on_delete method is used to tell Django what to do with model instances that depend on the model instance you delete. (e.g. a ForeignKey relationship). The on_delete=models.CASCADE tells Django to cascade the deleting effect i.e. continue deleting the dependent models as well. 
Let me give some information on them:,"The functions* quit(), exit(), and sys.exit() function in the same way: they raise the SystemExit exception.  So there is no real difference, except that sys.exit() is always available but exit() and quit() are only available if the site module is imported."
What you'll see sometimes is the following:,"An interface, for an object, is a set of methods and attributes on that object."
"Without the main sentinel, the code would be executed even if the script were imported as a module.","Everyone else has already answered it, but I think I still have something else to add."
"While this is possible, you should not use the Flask dev server in production. The Flask dev server is not designed to be particularly secure, stable, or efficient. See the docs on deploying for correct solutions.","If you use the flask executable to start your server, use flask run --host=0.0.0.0 to change the default from 127.0.0.1 and open it up to non-local connections."
You can read the innerHTML attribute to get the source of the content of the element or outerHTML for the source with the current element.,"There is not really a straightforward way of getting the HTML source code of a webelement. You will have to use JavaScript. I am not too sure about python bindings, but you can easily do like this in Java. I am sure there must be something similar to JavascriptExecutor class in Python."
"In Python 2, open outfile with mode 'wb' instead of 'w'.  The csv.writer writes \r\n into the file directly.  If you don't open the file in binary mode, it will write \r\r\n because on Windows text mode will translate each \n into \r\n.","Opening the file in binary mode ""wb"" will not work in Python 3+.  Or rather, you'd have to convert your data to binary before writing it.  That's just a hassle."
Take a look at this:,In summary - let me emphasize: Do not use is to compare integers.
"For a regular dict, you can use:","Using a check for newkey!=oldkey, this way you can do:"
"read_csv takes an encoding option to deal with files in different formats. I mostly use read_csv('file', encoding = ""ISO-8859-1""), or alternatively encoding = ""utf-8"" for reading, and generally utf-8 for to_csv.",Simplest of all Solutions:
"For all built-in Python objects (like
  strings, lists, dicts, functions,
  etc.), if x is y, then x==y is also
  True.",I would like to show a little example on how is and == are involved in immutable types. Try that:
All logging output is handled by the handlers; just add a logging.StreamHandler() to the root logger.,The simplest way to log to stdout:
Have a look at the Requests exception docs.  In short:,"One additional suggestion to be explicit. It seems best to go from specific to general down the stack of errors to get the desired error to be caught, so the specific ones don't get masked by the general one."
"Similarly, ",And if you want to access more than one column at a time you could do:
Latest Python Standard Library Documentation,A beautiful gem in this closed question:
when i write import StringIO it says there is no such module.,In my case I have used:
"mySQLdb is a python interface for mysql, but it is not mysql itself. And apparently mySQLdb needs the command 'mysql_config', so you need to install that first.",I was installing python-mysql on Ubuntu 12.04 using
"Do-something if <condition>, else do-something else.",The reason you're getting this error has to do with how the list comprehension is performed.
"The correct, fully Pythonic way to read a file is the following:",Two memory efficient ways in ranked order (first is best) -
Its all metadata for the Foobar module.,"I strongly favour minimal file headers, by which I mean just:"
"The syntax for decorators with arguments is a bit different - the decorator with arguments should return a function that will take a function and return another function. So it should really return a normal decorator. A bit confusing, right? What I mean is:","Edit : for an in-depth understanding of the mental model of decorators, take a look at this awesome Pycon Talk. well worth the 30 minutes."
Now variable refers to an empty list*.,This is surprisingly complex topic in Python. 
"Here's an example using apply on the dataframe, which I am calling with axis = 1. ","There is a clean, one-line way of doing this in Pandas:"
selenium.common.exceptions.WebDriverException: Message: 'geckodriver' executable needs to be in PATH.,This solved it for me.
Everyone seems to want to tell you what you should be doing rather than just answering the question.,Here is the solution which works for me:
"ctypes module is part of the standard library, and therefore is more stable and widely available than swig, which always tended to give me problems.",You should have a look at Boost.Python. Here is the short introduction taken from their website:
"It seems like you are asking about the difference between the data model and the domain model – the latter is where you can find the business logic and entities as perceived by your end user, the former is where you actually store your data.","I usually implement a service layer in between views and models. This acts like your project's API and gives you a good helicopter view of what is going on. I inherited this practice from a colleague of mine that uses this layering technique a lot with Java projects (JSF), e.g:"
"If you have a DataFrame with only one row, then access the first (only) row as a Series using iloc, and then the value using the column name:",These are fast access for scalars
With the introduction of Data Classes in Python 3.7 we get very close. ,"Use a named tuple, which was added to the collections module in the standard library in Python 2.6. It's also possible to use Raymond Hettinger's named tuple recipe if you need to support Python 2.4."
I believe DataFrame.fillna() will do this for you.,It is not guaranteed that the slicing returns a view or a copy. You can do
"Yes, given an array, array, and a value, item to search for, you can use np.where as:","If you need the index of the first occurrence of only one value, you can use nonzero (or where, which amounts to the same thing in this case):"
You can use this syntax:,"In addition to what other have said, you may also be interested to know that what in does is to call the list.__contains__ method, that you can define on any class you write and can get extremely handy to use python at his full extent.  "
Two options that don't require copying the whole set:,Least code would be:
"Use random.uniform(a, b):","if you want generate a random float with N digits to the right of point, you can make this : "
"For many objects, you can use this code, replacing 'object' with the object you're interested in:",You can use the built in dir() function to get a list of all the attributes a module has.  Try this at the command line to see how it works.
You need list,You take the string and pass it to list()
"Get current axis via plt.gca(), and then set its limits:",Another workaround is to get the plot's axes and reassign changing only the y-values:
"CPython is the original Python implementation. It is the implementation you download from Python.org. People call it CPython to distinguish it from other, later, Python implementations, and to distinguish the implementation of the language engine from the Python programming language itself.","You need to distinguish between a language and an implementation. Python is a language, "
"I've had a lot of experience running a compiled regex 1000s of times versus compiling on-the-fly, and have not noticed any perceivable difference.  Obviously, this is anecdotal, and certainly not a great argument against compiling, but I've found the difference to be negligible.","For me, the biggest benefit to re.compile is being able to separate definition of the regex from its use."
"fcntl, select, asyncproc won't help in this case.","I have often had a similar problem; Python programs I write frequently need to have the ability to execute some primary functionality while simultaneously accepting user input from the command line (stdin). Simply putting the user input handling functionality in another thread doesn't solve the problem because readline() blocks and has no timeout. If the primary functionality is complete and there is no longer any need to wait for further user input I typically want my program to exit, but it can't because readline() is still blocking in the other thread waiting for a line. A solution I have found to this problem is to make stdin a non-blocking file using the fcntl module:"
A more pythonic way would be:,"I prefer to suppress an exception rather than checking for the file's existence, to avoid a TOCTTOU bug.  Matt's answer is a good example of this, but we can simplify it slightly under Python 3, using contextlib.suppress():"
One solution that I have employed is to do this:,"Celery is a distributed task queue, built on AMQP (RabbitMQ). It also handles periodic tasks in a cron-like fashion (see periodic tasks). Depending on your app, it might be worth a gander."
zip is its own inverse! Provided you use the special * operator.,You could also do
The related_name attribute specifies the name of the reverse relation from the User model back to your model.,To add to existing  answer - related name is a must in case there 2 FKs in the model that point to the same table. For example in case of Bill of material
"Just as an FYI, you can also specify those things as column attributes. For instance, I might have done:",Usage from @jpmc26
Take a look at the Packages documentation (Section 6.4).,"In lib\BoxTime.py, write a function foo() like this:"
"Based on your comments to orip's post, I guess this is what happened:",Does
"Just install any package with the ""config --global http.sslVerify false"" statement",You can specify a cert with this param:
You can refine your search to only find those divs with a given class using BS3:,From the documentation:
"A Session object is basically an ongoing transaction of changes to a database (update, insert, delete). These operations aren't persisted to the database until they are committed (if your program aborts for some reason in mid-session transaction, any uncommitted changes within are lost).",This does not strictly answer the original question but some people have mentioned that with session.autoflush = True you don't have to use session.flush()... And this is not always true.
"Let's get one thing out of the way first. The explanation that yield from g is equivalent to for v in g: yield v does not even begin to do justice to what yield from is all about. Because, let's face it, if all yield from does is expand the for loop, then it does not warrant adding yield from to the language and preclude a whole bunch of new features from being implemented in Python 2.x.","What are the situations where ""yield from"" is useful?"
"For a pure python module you can find the source by looking at themodule.__file__.
The datetime module, however, is written in C, and therefore datetime.__file__ points to a .so file (there is no datetime.__file__ on Windows), and therefore, you can't see the source.",Running python -v from the command line should tell you what is being imported and from where.  This works for me on Windows and Mac OS X.
Asserts should be used to test conditions that should never happen.  The purpose is to crash early in the case of a corrupt program state.,"""assert"" statements are removed when the compilation is optimized.  So, yes, there are both performance and functional differences."
"As Johannes pointed out, ","If you need access to the index as you iterate through the string, use enumerate():"
"No, there's no literal syntax for the empty set. You have to write set().","By all means, please use set() to create an empty set. "
"If you're brand new to using unittests, the simplest approach to learn is often the best. On that basis along I recommend using py.test rather than the default unittest module.",The free Python book Dive Into Python has a chapter on unit testing that you might find useful.
Non-numpy way:,"What about using numpy.count_nonzero, something like "
I think this would be best explained by the following picture:,"These are subplot grid parameters encoded as a single integer. For example, ""111"" means ""1x1 grid, first subplot"" and ""234"" means ""2x3 grid, 4th subplot""."
"As you are in python3 , use dict.items() instead of dict.iteritems()","In Python2, we had .items() and .iteritems() in dictionaries. dict.items() returned list of tuples in dictionary [(k1,v1),(k2,v2),...]. It copied all tuples in dictionary and created new list. If dictionary is very big, there is very big memory impact. "
I'd recommend using Python's with statement for managing resources that need to be cleaned up.  The problem with using an explicit close() statement is that you have to worry about people forgetting to call it at all or forgetting to place it in a finally block to prevent a resource leak when an exception occurs.,The standard way is to use atexit.register:
Try,This prints something like
"For a file module.py, the unit test should normally be called test_module.py, following Pythonic naming conventions.","If there has only 1 test files, putting it in a top-level directory is recommended:"
"pip show <package name> will provide the location for Windows and macOS, and I'm guessing any system. :)",pip when used with virtualenv will generally install packages in the path <virtualenv_name>/lib/<python_ver>/site-packages.

"Named tuples are basically easy-to-create, lightweight object types.  Named tuple instances can be referenced using object-like variable dereferencing or the standard tuple syntax.  They can be used similarly to struct or other common record types, except that they are immutable.  They were added in Python 2.6 and Python 3.0, although there is a recipe for implementation in Python 2.4.",A named tuple is a tuple.
From New-style and classic classes:,Declaration-wise:
"The shebang line in any script determines the script's ability to be executed like a standalone executable without typing python beforehand in the terminal or when double clicking it in a file manager (when configured properly). It isn't necessary but generally put there so when someone sees the file opened in an editor, they immediately know what they're looking at. However, which shebang line you use is important.",It's really just a matter of taste. Adding the shebang means people can invoke the script directly if they want (assuming it's marked as executable); omitting it just means python has to be invoked manually.
For Python 2.6 and later and Python 3.x:,"The traceback module provides methods for formatting and printing exceptions and their tracebacks, e.g. this would print exception like the default handler does:"
"You want to use os.path.expanduser.
This will ensure it works on all platforms:",I found that pathlib module also supports this.
"If you need to do this, do",All proposed answers so far seem to miss the fact that a double (floats in python are actually doubles) can also be an integer (if it has nothing after the decimal point).  I use the built-in is_integer() method on doubles to check this.
You can use the isin method:,You can use the method query:
in is definitely more pythonic.,"in wins hands-down, not just in elegance (and not being deprecated;-) but also in performance, e.g.:"
"Use TestCase.assertRaises (or TestCase.failUnlessRaises) from the unittest module, for example:",Since Python 2.7 you can use context manager to get ahold of the actual Exception object thrown:
Don't just hastily pick the first import strategy that works for you or else you'll have to rewrite the codebase later on when you find it doesn't meet your needs.  ,importlib was added to Python 3 to programmatically import a module.
"In Python 3, this question doesn't apply. The plain int type is unbounded.","If you just need a number that's bigger than all others, you can use"
Spreadsheet version
"The special attribute __slots__ allows you to explicitly state which instance attributes you expect your object instances to have, with the expected results:",Quoting Jacob Hallen:
"Really, you just compare the string to whatever you expect to accept as representing true, so you can do this:",Use:
"It is strange how much beauty varies for different people. I find the list comprehension much clearer than filter+lambda, but use whichever you find easier.","This is a somewhat religious issue in Python. Even though Guido considered removing map, filter and reduce from Python 3, there was enough of a backlash that in the end only reduce was moved from built-ins to functools.reduce."
"Per Format Specification Mini-Language,",I got this to work:
"Supposing d is your list of dicts, simply:","The other answers are correct, but not much has been explained in terms of advantages and limitations of these methods. The aim of this post will be to show examples of these methods under different situations, discuss when to use (and when not to use), and suggest alternatives."
"++ is not an operator. It is two + operators. The + operator is the identity operator, which does nothing. (Clarification: the + and - unary operators only work on numbers, but I presume that you wouldn't expect a hypothetical ++ operator to work on strings.)",Python does not have pre and post increment operators.
You would want and instead of &&.,Python uses and and or conditionals.
Are you talking about lambda expressions? Like,"lambda is just a fancy way of saying function. Other than its name, there is nothing obscure, intimidating or cryptic about it. When you read the following line, replace lambda by function in your mind:"
"You can also use the option_context, with one or more options:",No need to hack settings. There is a simple way:
"I detected the peaks using a local maximum filter. Here is the result on your first dataset of 4 paws:
",Data file: paw.txt. Source code:
From Ian Bicking's own introduction to pip:,Many of the answers here are out of date for 2015 (although the initially accepted one from Daniel Roseman is not). Here's the current state of things:
You can find a short collection of useful list functions here.,Slicing:
"Using __name__ is the preferred method as it applies uniformly. Unlike func_name, it works on built-in functions as well:","To get the current function's or method's name from inside it, consider:"
"As of pip 1.3, there is a pip show command.",I just sent a pull request in pip with the enhancement Hugo Tavares said:
Quoting from the Conda blog:,"Disclaimer: This answer describes the state of things as it was a decade ago, at that time pip did not support binary packages. Conda was specifically created to better support building and distributing binary packages, in particular data science libraries with C extensions. For reference, pip only gained widespread support for portable binary packages with wheels (pip 1.4 in 2013) and the manylinux1 specification (pip 8.1 in March 2016). See the more recent answer for more history."
Here are some pros/cons I came up with.,"The threading module uses threads, the multiprocessing module uses processes. The difference is that threads run in the same memory space, while processes have separate memory. This makes it a bit harder to share objects between processes with multiprocessing. Since threads use the same memory, precautions have to be taken or two threads will write to the same memory at the same time. This is what the global interpreter lock is for."
"The uuid module provides immutable UUID objects (the UUID class) and the functions uuid1(), uuid3(), uuid4(), uuid5() for generating version 1, 3, 4, and 5 UUIDs as specified in RFC 4122.","If you're using Python 2.5 or later, the uuid module is already included with the Python standard distribution."
You can use a list comprehension to create a new list containing only the elements you don't want to remove:,"The answers suggesting list comprehensions are ALMOST correct -- except that they build a completely new list and then give it the same name the old list as, they do NOT modify the old list in place. That's different from what you'd be doing by selective removal, as in @Lennart's suggestion -- it's faster, but if your list is accessed via multiple references the fact that you're just reseating one of the references and NOT altering the list object itself can lead to subtle, disastrous bugs."
Also works if it is already an absolute path:,"You could use the new Python 3.4 library pathlib. (You can also get it for Python 2.6 or 2.7 using pip install pathlib.) The authors wrote: ""The aim of this library is to provide a simple hierarchy of classes to handle filesystem paths and the common operations users do over them."""
See Python PEP 8: Function and Variable Names:,The Google Python Style Guide has the following convention:
It allows you to provide a default value if the key is missing:,What is the dict.get() method?
"You can use PyInstaller to package Python programs as standalone executables. It works on Windows, Linux, and Mac.","You can use py2exe as already answered and use Cython to convert your key .py files in .pyc, C compiled files, like .dll in Windows and .so on Linux."
"Apart from a bare except: clause (which as others have said you shouldn't use), you can simply catch Exception:",You can but you probably shouldn't:
"Python doesn't support ++, but you can do:","Simply put, the ++ and -- operators don't exist in Python because they wouldn't be operators, they would have to be statements. All namespace modification in Python is a statement, for simplicity and consistency. That's one of the design decisions. And because integers are immutable, the only way to 'change' a variable is by reassigning it."
To delimit by a tab you can use the sep argument of to_csv:,"When you are storing a DataFrame object into a csv file using the to_csv method, you probably wont be needing to store the preceding indices of each row of the DataFrame object."
I used %matplotlib inline in the first cell of the notebook and it works. I think you should try:,"If your matplotlib version is above 1.4, it is also possible to use"
"Environment variables must be strings, so use",You may need to consider some further aspects for code robustness;
"I know it's been said already, but I'd highly recommend the requests Python package.","urllib2 provides some extra functionality, namely the urlopen() function can allow you to specify headers (normally you'd have had to use httplib in the past, which is far more verbose.) More importantly though, urllib2 provides the Request class, which allows for a more declarative approach to doing a request:"
"It seems mysql_config is missing on your system or the installer could not find it.
Be sure mysql_config is really installed.","In Mac OS, I simply ran this in terminal to fix:"
"When you run a program in Python, the interpreter compiles it to bytecode first (this is an oversimplification) and stores it in the __pycache__ folder. If you look in there you will find a bunch of files sharing the names of the .py files in your project's folder, only their extensions will be either .pyc or .pyo. These are bytecode-compiled and optimized bytecode-compiled versions of your program's files, respectively.",__pycache__ is a folder containing Python 3 bytecode compiled and ready to be executed.
"Without the 0x prefix, you need to specify the base explicitly, otherwise there's no way to tell:","int(hexstring, 16) does the trick, and works with and without the 0x prefix:"
Prepend the url prefix git+ (See VCS Support):,"Using pip with git+ to clone a repository can be extremely slow (test with https://github.com/django/django@stable/1.6.x for example, it will take a few minutes). The fastest thing I've found, which works with GitHub and BitBucket, is:"
"There's no performance difference, as they compile to the same bytecode:",Both Google and Python's style guide is the best practice:
"It is generally a bad pattern to kill a thread abruptly, in Python, and in any language. Think of the following cases:",A multiprocessing.Process can p.terminate()
"TL;DR: As of today (2019), in Python 3.7+ you must turn this feature on using a ""future"" statement, from __future__ import annotations.","Specifying the type as string is fine, but always grates me a bit that we are basically circumventing the parser. So you better not misspell any one of these literal strings:"
"Inside a function, the bytecode is:",You might ask why it is faster to store local variables than globals. This is a CPython implementation detail.
Just use the sys.getsizeof function defined in the sys module.,"The answer, ""Just use sys.getsizeof"", is not a complete answer."
You could use relative imports (python >= 2.5):,"Relative imports (as in from .. import mymodule) only work in a package.
To import 'mymodule' that is in the parent directory of your current module:"
Note: Avoid using python setup.py install use pip install .,"For me, the following mostly works:"
You can list all the available timezones with pytz.all_timezones:,Don't create your own list - pytz has a built-in set:
or,It's generally considered best-practice to only catch the errors you are interested in. In the case of shutil.rmtree it's probably OSError:
Update: Comments point out that the instructions here may be dangerous. Consider using the Visual C++ 2008 Express edition or the purpose-built Microsoft Visual C++ Compiler for Python (details) and NOT using the original answer below. Original error message means the required version of Visual C++ is not installed.,"I found the solution. 
I had the exact same problem, and error, installing 'amara'. I had mingw32 installed, but distutils needed to be configured."
"I suggest using pip in place of easy_install. With pip, you can list all installed packages and their versions with ",You can try
The best solution in my opinion is to use the unittest command line interface which will add the directory to the sys.path so you don't have to (done in the TestLoader class).,"The simplest solution for your users is to provide an executable script (runtests.py or some such) which bootstraps the necessary test environment, including, if needed, adding your root project directory to sys.path temporarily. This doesn't require users to set environment variables, something like this works fine in a bootstrap script:"
"If this is for Python 2.x or for Python 3.2+, you can use callable(). It used to be deprecated, but is now undeprecated, so you can use it again. You can read the discussion here: http://bugs.python.org/issue10518. You can do this with:","Builtin types that don't have constructors in the built-in namespace (e.g. functions, generators, methods) are in the types module. You can use types.FunctionType in an isinstance call:"
Doesn't too much matter.  Whatever makes you happy will work.  There aren't a lot of silly rules because Python projects can be simple.,According to Jean-Paul Calderone's Filesystem structure of a Python project:
"map may be microscopically faster in some cases (when you're NOT making a lambda for the purpose, but using the same function in map and a listcomp). List comprehensions may be faster in other cases and most (not all) pythonistas consider them more direct and clearer.",Cases
I would use filter:,Using a list comprehension is the most Pythonic way:
simply run,Python 3 has a built-in support for virtual environments - venv. It might be better to use that instead. Referring to the docs:
Update: Pandas 0.23.4 onwards,Try this:
"With __future__ module's inclusion, you can slowly be accustomed to incompatible changes or to such ones introducing new keywords.",When you do
"When you write [x]*3 you get, essentially, the list [x, x, x]. That is, a list with 3 references to the same x. When you then modify this single x it is visible via all three references to it:",Live visualization using Python Tutor:
"If you're already normalizing the inputs to booleans, then != is xor.",You can always use the definition of xor to compute it from other logical operations:
You can use Q objects for this. They can be negated with the ~ operator and combined much like normal Python expressions:,"Your query appears to have a double negative, you want to exclude all rows where x is not 5, so in other words you want to include all rows where x is 5. I believe this will do the trick:"
"When you use a decorator, you're replacing one function with another.  In other words, if you have a decorator",As of python 3.5+:
"is the Pythonic idiom for testing that a variable is not set to None. This idiom has particular uses in the case of declaring keyword functions with default parameters. is tests identity in Python. Because there is one and only one instance of None present in a running Python script/program, is is the optimal test for this. As Johnsyweb points out, this is discussed in PEP 8 under ""Programming Recommendations"".","From, Programming Recommendations, PEP 8:"
"I usually use a dictionary, not a list to return JSON content. ",New in django 1.7
"""I do not know if it is out of ignorance, but I do not like that
  kind of programming, as it is using exceptions to perform flow control.""","A try block allows you to handle an expected error. The except block should only catch exceptions you are prepared to handle. If you handle an unexpected error, your code may do the wrong thing and hide bugs."
"Basically, eval is used to evaluate a single dynamically generated Python expression, and exec is used to execute dynamically generated Python code only for its side effects.","exec is not an expression: a statement in Python 2.x, and a function in Python 3.x. It compiles and immediately evaluates a statement or set of statement contained in a string. Example:"
"According to Python Official Documentation, you can explicitly invoke the Garbage Collector to release unreferenced memory with gc.collect(). Example:","Unfortunately (depending on your version and release of Python) some types of objects use ""free lists"" which are a neat local optimization but may cause memory fragmentation, specifically by making more and more memory ""earmarked"" for only objects of a certain type and thereby unavailable to the ""general fund""."
"echoing @HYRY, see the new docs in 0.11","When the indexing operator is passed a string or integer, it attempts to find a column with that particular name and return it as a Series."
Use the built-in function dir().,I use __dict__ and dir(<instance>)
"Basically, the way the Selenium detection works, is that they test for predefined JavaScript variables which appear when running with Selenium. The bot detection scripts usually look anything containing word ""selenium"" / ""webdriver"" in any of the variables (on window object), and also document variables called $cdc_ and $wdc_. Of course, all of this depends on which browser you are on. All the different browsers expose different things.",You can use vim or perl to replace the cdc_ string in chromedriver. See answer by @Erti-Chris Eelmaa to learn more about that string and how it's a detection point.
"OK, two steps to this - first is to write a function that does the translation you want - I've put an example together based on your pseudo-code:","Since this is the first Google result for 'pandas new column from others', here's a simple example:"
July 2018 Update ,fixed it for me in Debian. Seems like uninstalling some .deb packages (twisted set in my case) has broken the path python uses to find packages 
"One way I've seen is to pass a mutable object, such as a list or a dictionary, to the thread's constructor, along with a an index or other identifier of some sort. The thread can then store its results in its dedicated slot in that object.  For example:","FWIW, the multiprocessing module has a nice interface for this using the Pool class.  And if you want to stick with threads rather than processes, you can just use the multiprocessing.pool.ThreadPool class as a drop-in replacement."
"dict.values returns a view of the dictionary's values, so you have to wrap it in list:",You can use * operator to unpack dict_values:
We start by answering the first question:,To extend @piRSquared's answer another version of Question 10
Problem Cause
It is possible in Python 3 since v3.1 and  Python 2.7. The new with syntax supports multiple context managers:,"Note that if you split the variables into lines, prior to Python 3.10 you must use backslashes to wrap the newlines."
"To directly answer this question's original title ""How to delete rows from a pandas DataFrame based on a conditional expression"" (which I understand is not necessarily the OP's problem but could help other users coming across this question) one way to do this is to use the drop method:","When you do len(df['column name']) you are just getting one number, namely the number of rows in the DataFrame (i.e., the length of the column itself).  If you want to apply len to each element in the column, use df['column name'].map(len).  So try"
"By ""shallow copying"" it means the content of the dictionary is not copied by value, but just creating a new reference.",Take this example:
"Tuples are fixed size in nature whereas lists are dynamic.
In other words, a tuple is immutable whereas a list is mutable.","There's a strong culture of tuples being for heterogeneous collections, similar to what you'd use structs for in C, and lists being for homogeneous collections, similar to what you'd use arrays for.  But I've never quite squared this with the mutability issue mentioned in the other answers.  Mutability has teeth to it (you actually can't change a tuple), while homogeneity is not enforced, and so seems to be a much less interesting distinction."
One way is to look at sys.maxsize as documented here:,When starting the Python interpreter in the terminal/command line you may also see a line like: 
Shortest Code,"Zip the two lists together, sort it, then take the parts you want:"
"A key difference between __getattr__ and __getattribute__ is that __getattr__ is only invoked if the attribute wasn't found the usual ways.  It's good for implementing a fallback for missing attributes, and is probably the one of two you want.",Lets see some simple examples of both __getattr__ and __getattribute__ magic methods.
Easily done in 2 steps:,if you want to change all the keys:
More info about startswith.,RanRag has already answered it for your specific question.
You must have inadvertently upgraded your system pip (probably through something like sudo pip install pip --upgrade),We can clear the error by modifying the pip file.
"Actually, a concise rule for Python Scope resolution, from Learning Python, 3rd. Ed.. (These rules are specific to variable names, not attributes. If you reference it without a period, these rules apply.)","Essentially, the only thing in Python that introduces a new scope is a function definition.  Classes are a bit of a special case in that anything defined directly in the body is placed in the class's namespace, but they are not directly accessible from within the methods (or nested classes) they contain."
Python docs for the pass statement,"The standard ""nop"" in Python is the pass statement:"
Try using the key keyword with sorted().,"IMO using itemgetter is more readable in this case than the solution by @cheeken. It is
also faster since almost all of the computation will be done on the c side (no pun intended) rather than through the use of lambda.  "
Use range. In Python 2.x it returns a list so all you need is:,You seem to be looking for range():
"Just get a handle to the root logger and add the StreamHandler. The StreamHandler writes to stderr. Not sure if you really need stdout over stderr, but this is what I use when I setup the Python logger and I also add the FileHandler as well. Then all my logs go to both places (which is what it sounds like you want).","logging.basicConfig() can take a keyword argument handlers since Python 3.3, which simplifies logging setup a lot, especially when setting up multiple handlers with the same formatter:"
You can use .replace.  For example:,"If your dictionary has more than a couple of keys, using map can be much faster than replace.  There are two versions of this approach, depending on whether your dictionary exhaustively maps all possible values (and also whether you want non-matches to keep their values or be converted to NaNs):"
myfun(*some_tuple) does exactly what you request. The * operator simply unpacks the tuple (or any iterable) and passes them as the positional arguments to the function. Read more about unpacking arguments.,Note that you can also expand part of argument list:
"Without seeing the source it's difficult to know the root cause, so I'll have to speak generally.",Finally I got it:
str.replace() v2|v3 does not recognize regular expressions. ,You are looking for the re.sub function.
From the Python PEP 8 -- Style Guide for Python Code:,"The other respondents are correct in describing the double leading and trailing underscores as a naming convention for ""special"" or ""magic"" methods."
Python does not have a trailing if statement.,"Inline if-else EXPRESSION must always contain else clause, e.g:"
Consider this simple problem:,You need to be careful with inheritance:
You can use the Axes.set_yscale method. That allows you to change the scale after the Axes object is created. That would also allow you to build a control to let the user pick the scale if you needed to.,"First of all, it's not very tidy to mix pylab and pyplot code. What's more, pyplot style is preferred over using pylab."
Python has a language feature called List Comprehensions that is perfectly suited to making this sort of thing extremely easy. The following statement does exactly what you want and stores the result in l3:,One way is to use sets:
"e.g, keep.update(xrange(11)) for your specific example.  Or, if you have to produce the values in a loop for some other reason,",Define set
"An import is required, import scipy.io...","Neither scipy.io.savemat, nor scipy.io.loadmat work for MATLAB arrays version 7.3. But the good part is that MATLAB version 7.3 files are hdf5 datasets. So they can be read using a number of tools, including NumPy."
"It's not because it doesn't make sense; it makes perfect sense to define ""x++"" as ""x += 1, evaluating to the previous binding of x"".","This original answer I wrote is a myth from the folklore of computing: debunked by Dennis Ritchie as ""historically impossible"" as noted in the letters to the editors of Communications of the ACM July 2012 doi:10.1145/2209249.2209251"
pytest.raises(Exception) is what you need.,Do you mean something like this:
"On the actual behavior, there is no difference. They all return None and that's it. However, there is a time and  place for all of these.
The following instructions are basically how the different methods should be used (or at least how I was taught they should be used), but they are not absolute rules so you can mix them up if you feel necessary to.","Yes, they are all the same. "
EDIT: There are better/more coherent answers to this question in other questions: ,"Try this.
Worked for me."
"Subtracting the later time from the first time difference = later_time - first_time creates a datetime object that only holds the difference.
In the example above it is 0 minutes, 8 seconds and 562000 microseconds.",Using datetime example
"Operator precedence 2.x, 3.x. The precedence of not is lower than that of in. So it is equivalent to:",not x in y is evaluated as x not in y
Python tutorial explains it:,(not including the name of the Python file)
You can use the attribute df.empty to check whether it's empty or not:,I use the len function. It's much faster than empty. len(df.index) is even faster.
"In Python 3, they made the / operator do a floating-point division, and added the // operator to do integer division (i.e., quotient without remainder); whereas in Python 2, the / operator was simply integer division, unless one of the operands was already a floating point number.","// is unconditionally ""flooring division"", e.g:"
"Module importing is quite fast, but not instant. This means that:","Putting the import statement inside of a function can prevent circular dependencies.
For example, if you have 2 modules, X.py and Y.py, and they both need to import each other, this will cause a circular dependency when you import one of the modules causing an infinite loop. If you move the import statement in one of the modules then it won't try to import the other module till the function is called, and that module will already be imported, so no infinite loop. Read here for more - effbot.org/zone/import-confusion.htm"
You can use dictionaries to accomplish this. Dictionaries are stores of keys and values. ,Use the built-in getattr function to get an attribute on an object by name.  Modify the name as needed.
"I believe this has already been answered by other users before me, so I only add it for the sake of completeness: the with statement simplifies exception handling by encapsulating common preparation and cleanup tasks in so-called context managers. More details can be found in PEP 343. For instance, the open statement is a context manager in itself, which lets you open a file, keep it open as long as the execution is in the context of the with statement where you used it, and close it as soon as you leave the context, no matter whether you have left it because of an exception or during regular control flow. The with statement can thus be used in ways similar to the RAII pattern in C++: some resource is acquired by the with statement and released when you leave the with context.",I would suggest two interesting lectures:
Like this:,See : http://codepad.org/S3zjnKoD
"If you do import foo (inside bar.py) and import bar (inside foo.py), it will work fine. By the time anything actually runs, both modules will be fully loaded and will have references to each other.",There was a really good discussion on this over at comp.lang.python last year. It answers your question pretty thoroughly.
exit is a helper for the interactive shell - sys.exit is intended for use in programs.,"If I use exit() in a code and run it in the shell, it shows a message asking whether I want to kill the program or not. It's really disturbing.
See here"
"John's answer is good (that list comprehensions are better when you want to iterate over something multiple times).  However, it's also worth noting that you should use a list if you want to use any of the list methods.  For example, the following code won't work:","Iterating over the generator expression or the list comprehension will do the same thing. However, the list comprehension will create the entire list in memory first while the generator expression will create the items on the fly, so you are able to use it for very large (and also infinite!) sequences."
"Using these magic methods (__enter__, __exit__) allows you to implement objects which can be used easily with the with statement. ",If you know what context managers are then you need nothing more to understand __enter__ and __exit__ magic methods. Lets see a very simple example.
"You need to add the path of your pip installation to your PATH system variable. By default, pip is installed to C:\Python34\Scripts\pip (pip now comes bundled with new versions of python), so the path ""C:\Python34\Scripts"" needs to be added to your PATH variable.","For Windows, when you install a package, you type:"
"Instead of hiding each element, you can hide the whole axis:",If you want to hide just the axis text keeping the grid lines:
With the -c (command) argument (assuming your file is named foo.py):,Just put hello() somewhere below the function and it will execute when you do python your_file.py
How about:,"dict.copy() is a shallow copy function for dictionary 

id is built-in function that gives you the address of variable"
Your second way is correct. ,"If you're using typing (introduced in Python 3.5) you can use typing.Optional, where Optional[X] is equivalent to Union[X, None]. It is used to signal that the explicit value of None is allowed . From typing.Optional:"
This will work:,"To check if one or more columns all exist, you can use set.issubset, as in:"
"You probably didn't fully deactivate the Conda environment - remember, the command you need to use with Conda is conda deactivate (for older versions, use source deactivate). So it may be wise to start a new shell and activate the environment in that before you try. Then deactivate it.","After making sure your environment is not active, type:"
"Also for some further discussion on .pyc vs .pyo, take a look at: http://www.network-theory.co.uk/docs/pytut/CompiledPythonfiles.html (I've copied the important part below)",A larger list of additional Python file-extensions (mostly rare and unofficial) can be found at http://dcjtech.info/topic/python-file-extensions/
"If you don't want to change your default settings, and you only want to change the width of the current notebook you're working on, you can enter the following into a cell:","That div.cell solution didn't actually work on my IPython, however luckily someone suggested a working solution for new IPythons:"
"Use isinstance(obj, basestring) for an object-to-test obj.","In Python 3.x basestring is not available anymore, as str is the sole string type (with the semantics of Python 2.x's unicode)."
You can do,There are two ways to add one dictionary to another.
"I think the best equivalent to PHP's var_dump($foo, $bar) is combine print with vars:","To display a value nicely, you can use the pprint module. The easiest way to dump all variables with it is to do"
"You can use full datetime variables with timedelta, and by providing a dummy date then using time to just get the time value.","As others here have stated, you can just use full datetime objects throughout:"
json.loads(),"When I started using json, I was confused and unable to figure it out for some time, but finally I got what I wanted
Here is the simple solution    "
"In line with the other answers, there are multiple ways to call super class methods (including the constructor), however in Python-3.x the process has been simplified:",super() returns a parent-like object in new-style classes:
"print is just a thin wrapper that formats the inputs (modifiable, but by default with a space between args and newline at the end) and calls the write function of a given object. By default this object is sys.stdout, but you can pass a file using the ""chevron"" form. For example:",print first converts the object to a string (if it is not already a string). It will also put a space before the object if it is not the start of a line and a newline character at the end.
"You can either use the response.raw file object, or iterate over the response.",Get a file-like object from the request and copy it to a file. This will also avoid reading the whole thing into memory at once.
"You can use the git+ssh URI scheme, but you must set a username. Notice the git@ part in the URI:","As an additional technique, if you have the private repository cloned locally, you can do:"
"For performance, especially when you're iterating over a large range, xrange() is usually better.  However, there are still a few cases why you might prefer range():","No, they both have their uses:"
Functional approach:,You can use a list comprehension:
"The low_memory option is not properly deprecated, but it should be, since it does not actually do anything differently[source]",Try:
IPython comes with some automatic reloading magic:,"In IPython 0.12 (and possibly earlier), you can use this:"
Use the datetime method and the operator < and its kin.,Use time
Basic answer:,It is also worth noting the sorted() function:
"Yes, you can.  By specifying the object_pairs_hook argument to JSONDecoder.  In fact, this is the exact example given in the documentation.",Simple version for Python 2.7+
"Your code produced an empty response body, you'd want to check for that or catch the exception raised. It is possible the server responded with a 204 No Content response, or a non-200-range status code was returned (404 Not Found, etc.). Check for this.","Be sure to remember to invoke json.loads() on the contents of the file, as opposed to the file path of that JSON:"
The syntax you're looking for:,why don't you just define a function?
With tqdm (conda install tqdm or pip install tqdm) you can add a progress meter to your loops in a second:,There are specific libraries (like this one here) but maybe something very simple would do:
"{} represents an empty dictionary, not an array/list.  For lists or arrays, you need [].",If you do it this way:
"For statements, use exec(string) (Python 2/3) or exec string (Python 2):",In the example a string is executed as code using the exec function.
"In Python 3, UTF-8 is the default source encoding (see PEP 3120), so unicode characters can be used anywhere.",Do not forget to verify if your text editor encodes properly your code in UTF-8.
"You use the built-in int() function, and pass it the base of the input number, i.e. 2 for a binary number:",Just type 0b11111111 in python interactive interface:
"Since you're on Ubuntu, don't bother with those source packages. Just install those development packages using apt-get.",I also had to install lib32z1-dev before lxml would compile (Ubuntu 13.04 x64).
Use sort_values to sort the df by a specific column's values:,"I tried the solutions above and I do not achieve results, so I found a different solution that works for me. The ascending=False is to order the dataframe in descending order, by default it is True. I am using python 3.6.6 and pandas 0.23.4 versions."
You can't.,conda create --name new_name --copy --clone old_name is better
"As of 3.3, time.clock() is deprecated, and it's suggested to use time.process_time() or time.perf_counter() instead.","The short answer is: most of the time time.clock() will be better.
However, if you're timing some hardware (for example some algorithm you put in the GPU), then time.clock() will get rid of this time and time.time() is the only solution left."
You can either Drop the columns you do not need OR Select the ones you need,"There is a new index method called difference. It returns the original columns, with the columns passed as argument removed. "
Given a sample dataframe df as:,"For a single column better to use map(), like this:"
"As you have it, the argument w is expecting a value after -w on the command line. If you are just looking to flip a switch by setting a variable True or False, have a look here (specifically store_true and store_false)",Adding a quick snippet to have it ready to execute:
"json.dumps() converts a dictionary to str object, not a json(dict) object! So you have to load your str into a dict to use it by using json.loads() method",json.dumps() returns the JSON string representation of the python dict. See the docs
"Often, a Python program is run by naming a .py file on the command line:","When creating a Python module, it is common to make the module execute some functionality (usually contained in a main function) when run as the entry point of the program. This is typically done with the following common idiom placed at the bottom of most Python files:"
To sort by the second column of a:,@steve's answer is actually the most elegant way of doing it.
"First of all, the .json attribute is a property that delegates to the request.get_json() method, which documents why you see None here. ","For reference, here's complete code for how to send json from a Python client:"
"Firstly, you can del other things besides local variables",There's this part of what del does (from the Python Language Reference):
"IPython is extremely useful if you like using interactive sessions. For example for your use-case there is the %save magic command, you just input %save my_useful_session 10-20 23 to save input lines 10 to 20 and 23 to my_useful_session.py (to help with this, every line is prefixed by its number).",From Andrew Jones's website (archived):
The purpose of meshgrid is to create a rectangular grid out of an array of x values and an array of y values.,Courtesy of Microsoft Excel: 
What about::,I am pretty sure that what you are looking for is called --find-links option.
Try using plt.tight_layout,You can use plt.subplots_adjust to change the spacing between the subplots (source)
If you want StopIteration to be raised if no matching element is found:,"I love this answer. However, since next() raise a StopIteration exception when there are no items,
i would use the following snippet to avoid an exception:"
"The psutil library gives you information about CPU, RAM, etc., on a variety of platforms:","Use the psutil library.  On Ubuntu 18.04, pip installed 5.5.0 (latest version) as of 1-30-2019.  Older versions may behave somewhat differently.
You can check your version of psutil by doing this in Python:"
You can use -k option to run test cases with different patterns:,Pytest supports several ways to run and select tests from the command-line.
"In Python 3.2+, you can elegantly do the following:"
